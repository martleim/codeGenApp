<{!
    scope.filterAttributes=function(attributes,condition){
        var arr=[];
        angular.forEach(attributes,function(attribute,index){
            if(condition(attribute))
                arr.push(attribute);
                
        });
        return arr;
    };
    
    scope.concatAttributes=function(attributes,condition,prefix,postfix){
        var ret="";
        prefix=(prefix)?prefix:"";
        postfix=(postfix)?postfix:"";
        attributes=this.filterAttributes(attributes,condition);
        angular.forEach(attributes,function(attribute,index){
            ret+=prefix+attribute.name+postfix+((index<attributes.length-1)?",":"");
                
        });
        return ret;
    };
    
    scope.getAttributesTypes=function(attributes,condition){
        var ret="";
        attributes=this.filterAttributes(attributes,condition);
        angular.forEach(attributes,function(attribute,index){
            ret+=(attribute.type.charAt(0)).toLowerCase();
        });
        return ret;
    };
    
    scope.replaceWithAttribute=function(attributes,condition,str,char,property){
        var ret="";
        attributes=this.filterAttributes(attributes,condition);
        angular.forEach(attributes,function(attribute,index){
            var val=attribute[property];
            ret+=str.split(char).join(val);
        });
        return ret;
    };
    
}>
(function () {

    var <{scope.capital(scope.entity.name)}>EditController = function ($rootScope, $scope, $location, $routeParams, $timeout, dataService, modalService) {

        var <{scope.entity.name}>Name = ($routeParams.<{scope.entity.name}>Name) ? $routeParams.<{scope.entity.name}>Name : "",
            timer,
            onRouteChangeOff;

        $scope.<{scope.entity.name}>={openTime:"09:00",closeTime:"18:00"};
        $scope.states = [];
        $scope.edit=(<{scope.entity.name}>Name && <{scope.entity.name}>Name!="");
        $scope.title = ($scope.edit) ? "Editar" : "Agregar";
        $scope.buttonText = ($scope.edit) ? "Guardar" : "Agregar";
        $scope.updateStatus = false;
        $scope.errorMessage = "";
        $scope.sameAsAdministrative = false;

        init();

        $scope.save = function () {
            if ($scope.editForm.$valid) {
                var <{scope.entity.name}>ToSave = angular.copy($scope.<{scope.entity.name}>);
                if (!this.edit) {
                    dataService.insert<{scope.capital(scope.entity.name)}>(<{scope.entity.name}>ToSave);
                }
                else {
                    dataService.update<{scope.capital(scope.entity.name)}>(<{scope.entity.name}>Name,<{scope.entity.name}>ToSave);
                }
                processSuccess();
            }
        };

        $scope.delete = function () {
            var name = $scope.<{scope.entity.name}>.name;

            var modalOptions = {
                closeButtonText: 'Cancelar',
                actionButtonText: 'Eliminar <{scope.capital(scope.entity.name)}>',
                headerText: 'Eliminar ' + name + '?',
                bodyText: 'Esta seguro que desea eliminar este <{scope.capital(scope.entity.name)}>?'
            };

            modalService.showModal({}, modalOptions).then(function (result) {
                if (result === 'ok') {
                    dataService.delete<{scope.capital(scope.entity.name)}>(name);
                    $scope.updateDeliveries();
                }
            });
        };
        
        function parseTimeToDate(time){
            var splited=time.split(":");
            var d=new Date();
            d.setHours(splited[0]);
            d.setMinutes(splited[1]);
            return d;
        }
        
        function parseDateToTime(d){
            var addZero=function(number){
                var str=number+"";
                if(str.length==1){
                    str="0"+str;
                }
                return str;
            }
            return (addZero(d.getHours())+":"+addZero(d.getMinutes()));
        }

        function init() {
            if (<{scope.entity.name}>Name != "") {
                $scope.<{scope.entity.name}> = angular.copy(dataService.get<{scope.capital(scope.entity.name)}>(<{scope.entity.name}>Name));
            }
            
            onRouteChangeOff = $rootScope.$on('$locationChangeStart', routeChange);
        }
        
        $scope.navigate = function (url) {
            $location.path(url);
        };

        function routeChange(event, newUrl) {
            //Navigate to newUrl if the form isn"t dirty
            if (!$scope.editForm.$dirty) return;

            var modalOptions = {
                closeButtonText: "Cancelar",
                actionButtonText: "Ignorar Cambios",
                headerText: "Cambios sin guardar",
                bodyText: "Tiene cambios sin guardar. Quiere abandonar la pagina?"
            };

            modalService.showModal({}, modalOptions).then(function (result) {
                if (result === "ok") {
                    onRouteChangeOff(); //Stop listening for location changes
                    $location.path(newUrl); //Go to page they"re interested in
                }
            });

            //prevent navigation by default since we"ll handle it
            //once the user selects a dialog option
            event.preventDefault();
            return;
        }

        function processSuccess() {
            $scope.editForm.$dirty = false;
            $scope.updateStatus = true;
            $scope.title = "Editar";
            $scope.buttonText = "Guardar";
            $scope.edit=true;
            startTimer();
        }

        function startTimer() {
            timer = $timeout(function () {
                $timeout.cancel(timer);
                $scope.errorMessage = '';
                $scope.updateStatus = false;
                $scope.navigate('/<{scope.plural(scope.entity.name)}>');
            }, 1000);
        }

    };

    <{scope.capital(scope.entity.name)}>EditController.$inject = ["$rootScope", "$scope", "$location", "$routeParams",
                                      "$timeout", "dataService", "modalService"];

    angular.module("<{scope.capital("test")}>App").controller("<{scope.capital(scope.entity.name)}>EditController", <{scope.capital(scope.entity.name)}>EditController);

}());